<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */
 
 
/**
 * Implements hook_preprocess_HOOK().
 */
function university_bootstrap_preprocess_page_title(&$variables) {
  if($node = \Drupal::routeMatch()->getParameter('node')) {
//dpm($node);
    /* @var $node \Drupal\node\NodeInterface */
    if($node->getType() == 'legacy_photo_essay' || $node->getType() == 'photograph'){
      $variables['banner'] = true;
       unset($variables['title']);
    }
    $banner_field_present = (!empty($node->field_banner_image) || !empty($node->field_banner_color) || !empty($node->field_subtitle) || !empty($node->field_byline));
    if ($node->getType() == 'narrative' && $banner_field_present) {
      //$variables['node'] = $node;
      //$banner_image = file_create_url($node->field_banner_image->entity->getFileUri());
      //$variables['banner_image'] = $banner_image;
      $banner_type = "plain";
      $variables['banner'] = array(
        'enabled' => true,
        //'items' => array(),
        'subtitle' => $node->get('field_subtitle')->getValue()[0]['value'],
        'byline' => $node->get('field_byline')->getValue()[0]['value'],
        'style' => "",
//        'text-color' => $node->get('field_banner_text_color')->getValue()[0]['value'],
//        'text-shadow-color' => $node->get('field_banner_text_shadow_color')->getValue()[0]['value'],
//        'overlay-color' => $node->get('field_banner_overlay_color')->getValue()[0]['value'],
      );
      if($banner_color = $node->get('field_banner_color')->getValue()[0]['color']){
        $variables['banner']['style'] .= "background-color: ".$banner_color.";";
        if($banner_color_opacity = $node->get('field_banner_color')->getValue()[0]['opacity']){
          $banner_color_values = hex2rgb($node->get('field_banner_color')->getValue()[0]['color']);
          $banner_color_values[] = $banner_color_opacity;
          $variables['banner']['style'] .= "background-color: rgba(".implode(",",$banner_color_values).");";
        }
        $banner_type = "color";
      }
      if($banner_image = $node->field_banner_image->entity){
        $variables['banner']['style'] .= "background-image: url('".file_create_url($banner_image->getFileUri())."');";
        $banner_type = "image";
      }
      $variables['banner']['type'] = $banner_type;
      // dpm($variables['banner']);
    }
  }
}

/**
 * Implements hook_preprocess_field().
 */
function university_bootstrap_preprocess_field__field_item(&$variables){
  //dpm($variables);
}
/**
 * Implements hook_preprocess_paragraph__card().
 */
function university_bootstrap_preprocess_paragraph__card(&$variables){
  $paragraph = $variables['paragraph'];
  if(!$paragraph->field_display_mode->isEmpty()){
    $variables['paragraph_card']['display_mode'] = $paragraph->field_display_mode->getValue()[0]['value'];
  }
}
/**
 * Implements hook_preprocess_paragraph__breakout().
 */
function university_bootstrap_preprocess_paragraph__breakout(&$variables){
  $paragraph = $variables['paragraph'];
  $variables['paragraph_breakout']['style'] = "";
  if(!$paragraph->field_background_color->isEmpty()){
    $background_color = $paragraph->field_background_color->getValue()[0]['color'];
    $variables['paragraph_breakout']['style'] .= "background-color: $background_color;";
  }
  if(!$paragraph->field_background_image->isEmpty() && $background_image = $paragraph->field_background_image->entity){
    $background_image_url = file_create_url($background_image->getFileUri());
    $variables['paragraph_breakout']['style'] .= "background-image: url('$background_image_url');";
  }
  if(empty($variables['paragraph_breakout']['style'])){
    unset($variables['paragraph_breakout']['style']);
  }
//  dpm($variables['paragraph_breakout']);
}
/**
 * Implements hook_preprocess_paragraph__banner().
 */
function university_bootstrap_preprocess_paragraph__banner(&$variables){
  $paragraph = $variables['paragraph'];
  //If banner image and nested paragraphs are present.
  if(!$paragraph->field_image->isEmpty() && !$paragraph->field_content->isEmpty()){
    $image_style = 'banner';
    // Generate image URL.
    if(!empty($image_style)){
      $banner_image_uri = $paragraph->field_image->entity->getFileUri();
      $banner_image = \Drupal\image\Entity\ImageStyle::load($image_style)->buildUrl($banner_image_uri);
    }
    else{
      $banner_image = file_create_url($paragraph->field_image->entity->getFileUri());
    }
    // // Add image as background.
    $variables['attributes']['style'][] = 'background-image: url("' . $banner_image . '");';
    $variables['attributes']['style'][] = 'background-size: cover;background-position: center center;';
    // Hide the normal <img> tag.
    hide($variables['content']['field_image']);
  }
  //Check if banner color is empty.
  if(!$paragraph->field_banner_color->isEmpty()){
    $banner_color = $paragraph->field_banner_color->getValue();
    $banner_color = reset($banner_color);
    $variables['attributes']['style'][] = 'background-color: ' . $banner_color['color'] . ';';
  }
  //Check if text color is empty.
  if (!$paragraph->field_text_color->isEmpty()){
    $text_color = $paragraph->field_text_color->getValue();
    $text_color = reset($text_color);
    $variables['attributes']['style'][] = 'color: ' . $text_color['color'] . ';';
  }
}
function hex2rgb($hex) {
   $hex = str_replace("#", "", $hex);

   if(strlen($hex) == 3) {
      $r = hexdec(substr($hex,0,1).substr($hex,0,1));
      $g = hexdec(substr($hex,1,1).substr($hex,1,1));
      $b = hexdec(substr($hex,2,1).substr($hex,2,1));
   } else {
      $r = hexdec(substr($hex,0,2));
      $g = hexdec(substr($hex,2,2));
      $b = hexdec(substr($hex,4,2));
   }
   $rgb = array($r, $g, $b);
   //return implode(",", $rgb); // returns the rgb values separated by commas
   return $rgb; // returns an array with the rgb values
}
